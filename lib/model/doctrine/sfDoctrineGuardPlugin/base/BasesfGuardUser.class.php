<?php

/**
 * BasesfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $first_name
 * @property string $last_name
 * @property string $email_address
 * @property string $username
 * @property string $algorithm
 * @property string $salt
 * @property string $password
 * @property boolean $is_active
 * @property boolean $is_super_admin
 * @property timestamp $last_login
 * @property string $fb_name
 * @property integer $fb_id
 * @property string $gender
 * @property date $birthday
 * @property string $locations
 * @property integer $twitter_id
 * @property string $twitter_oauth_token
 * @property string $twitter_oauth_token_secret
 * @property Doctrine_Collection $Groups
 * @property Doctrine_Collection $Permissions
 * @property Doctrine_Collection $sfGuardUserPermission
 * @property Doctrine_Collection $sfGuardUserGroup
 * @property sfGuardRememberKey $RememberKeys
 * @property sfGuardForgotPassword $ForgotPassword
 * @property Doctrine_Collection $Tokens
 * 
 * @method string                getFirstName()                  Returns the current record's "first_name" value
 * @method string                getLastName()                   Returns the current record's "last_name" value
 * @method string                getEmailAddress()               Returns the current record's "email_address" value
 * @method string                getUsername()                   Returns the current record's "username" value
 * @method string                getAlgorithm()                  Returns the current record's "algorithm" value
 * @method string                getSalt()                       Returns the current record's "salt" value
 * @method string                getPassword()                   Returns the current record's "password" value
 * @method boolean               getIsActive()                   Returns the current record's "is_active" value
 * @method boolean               getIsSuperAdmin()               Returns the current record's "is_super_admin" value
 * @method timestamp             getLastLogin()                  Returns the current record's "last_login" value
 * @method string                getFbName()                     Returns the current record's "fb_name" value
 * @method integer               getFbId()                       Returns the current record's "fb_id" value
 * @method string                getGender()                     Returns the current record's "gender" value
 * @method date                  getBirthday()                   Returns the current record's "birthday" value
 * @method string                getLocations()                  Returns the current record's "locations" value
 * @method integer               getTwitterId()                  Returns the current record's "twitter_id" value
 * @method string                getTwitterOauthToken()          Returns the current record's "twitter_oauth_token" value
 * @method string                getTwitterOauthTokenSecret()    Returns the current record's "twitter_oauth_token_secret" value
 * @method Doctrine_Collection   getGroups()                     Returns the current record's "Groups" collection
 * @method Doctrine_Collection   getPermissions()                Returns the current record's "Permissions" collection
 * @method Doctrine_Collection   getSfGuardUserPermission()      Returns the current record's "sfGuardUserPermission" collection
 * @method Doctrine_Collection   getSfGuardUserGroup()           Returns the current record's "sfGuardUserGroup" collection
 * @method sfGuardRememberKey    getRememberKeys()               Returns the current record's "RememberKeys" value
 * @method sfGuardForgotPassword getForgotPassword()             Returns the current record's "ForgotPassword" value
 * @method Doctrine_Collection   getTokens()                     Returns the current record's "Tokens" collection
 * @method sfGuardUser           setFirstName()                  Sets the current record's "first_name" value
 * @method sfGuardUser           setLastName()                   Sets the current record's "last_name" value
 * @method sfGuardUser           setEmailAddress()               Sets the current record's "email_address" value
 * @method sfGuardUser           setUsername()                   Sets the current record's "username" value
 * @method sfGuardUser           setAlgorithm()                  Sets the current record's "algorithm" value
 * @method sfGuardUser           setSalt()                       Sets the current record's "salt" value
 * @method sfGuardUser           setPassword()                   Sets the current record's "password" value
 * @method sfGuardUser           setIsActive()                   Sets the current record's "is_active" value
 * @method sfGuardUser           setIsSuperAdmin()               Sets the current record's "is_super_admin" value
 * @method sfGuardUser           setLastLogin()                  Sets the current record's "last_login" value
 * @method sfGuardUser           setFbName()                     Sets the current record's "fb_name" value
 * @method sfGuardUser           setFbId()                       Sets the current record's "fb_id" value
 * @method sfGuardUser           setGender()                     Sets the current record's "gender" value
 * @method sfGuardUser           setBirthday()                   Sets the current record's "birthday" value
 * @method sfGuardUser           setLocations()                  Sets the current record's "locations" value
 * @method sfGuardUser           setTwitterId()                  Sets the current record's "twitter_id" value
 * @method sfGuardUser           setTwitterOauthToken()          Sets the current record's "twitter_oauth_token" value
 * @method sfGuardUser           setTwitterOauthTokenSecret()    Sets the current record's "twitter_oauth_token_secret" value
 * @method sfGuardUser           setGroups()                     Sets the current record's "Groups" collection
 * @method sfGuardUser           setPermissions()                Sets the current record's "Permissions" collection
 * @method sfGuardUser           setSfGuardUserPermission()      Sets the current record's "sfGuardUserPermission" collection
 * @method sfGuardUser           setSfGuardUserGroup()           Sets the current record's "sfGuardUserGroup" collection
 * @method sfGuardUser           setRememberKeys()               Sets the current record's "RememberKeys" value
 * @method sfGuardUser           setForgotPassword()             Sets the current record's "ForgotPassword" value
 * @method sfGuardUser           setTokens()                     Sets the current record's "Tokens" collection
 * 
 * @package    sfmelodydemo
 * @subpackage model
 * @author     mourad.majdoub
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user');
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email_address', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('username', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 128,
             ));
        $this->hasColumn('algorithm', 'string', 128, array(
             'type' => 'string',
             'default' => 'sha1',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('salt', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('password', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('is_super_admin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('fb_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('fb_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('gender', 'string', 6, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 6,
             ));
        $this->hasColumn('birthday', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('locations', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('twitter_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('twitter_oauth_token', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 200,
             ));
        $this->hasColumn('twitter_oauth_token_secret', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 200,
             ));


        $this->index('is_active_idx', array(
             'fields' => 
             array(
              0 => 'is_active',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardGroup as Groups', array(
             'refClass' => 'sfGuardUserGroup',
             'local' => 'user_id',
             'foreign' => 'group_id'));

        $this->hasMany('sfGuardPermission as Permissions', array(
             'refClass' => 'sfGuardUserPermission',
             'local' => 'user_id',
             'foreign' => 'permission_id'));

        $this->hasMany('sfGuardUserPermission', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUserGroup', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardRememberKey as RememberKeys', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardForgotPassword as ForgotPassword', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Token as Tokens', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}